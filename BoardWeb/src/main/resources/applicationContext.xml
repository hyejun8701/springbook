<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">

	<context:component-scan base-package="com.springbook.biz" />
	
	<bean id="log" class="com.springbook.biz.common.LogAdvice"></bean>
	<bean id="log4j" class="com.springbook.biz.common.Log4jAdvice"></bean>
	<bean id="before" class="com.springbook.biz.common.BeforeAdvice"></bean>
	<bean id="afterRetuning" class="com.springbook.biz.common.AfterReturningAdvice"></bean>
	<bean id="afterThrowing" class="com.springbook.biz.common.AfterThrowingAdvice"></bean>
	<bean id="after" class="com.springbook.biz.common.AfterAdvice"></bean>
	<bean id="around" class="com.springbook.biz.common.AroundAdvice"></bean>
	
	<aop:config>
		<aop:pointcut id="allPointCut" expression="execution(* com.springbook.biz..*Impl.*(..))" />
		<aop:pointcut id="getPointCut" expression="execution(* com.springbook.biz..*Impl.get*(..))" />
		
		<!-- <aop:aspect ref="before">
			<aop:before pointcut-ref="allPointCut" method="beforeLog" />
		</aop:aspect> -->
		
		<!-- <aop:aspect ref="afterRetuning">
			<aop:after-returning pointcut-ref="getPointCut" method="afterLog" returning="returnObj" />
		</aop:aspect> -->
		
		<!-- <aop:aspect ref="afterThrowing">
			<aop:after-throwing pointcut-ref="allPointCut" method="exceptionLog" throwing="exceptObj" />
		</aop:aspect> -->
		
		<!-- <aop:aspect ref="after">
			<aop:after pointcut-ref="allPointCut" method="finallyLog" />
		</aop:aspect> -->
		
		<aop:aspect ref="around">
			<aop:around pointcut-ref="allPointCut" method="aroundLog" />
		</aop:aspect>
		
		<!-- <aop:aspect ref="log">
			<aop:pointcut expression="execution(* com.springbook.biz..*Impl.*(..))" id="testPointCut"/>
			<aop:after pointcut-ref="testPointCut" method="printLog" />
		</aop:aspect>
		
		<aop:aspect ref="log4j">
			<aop:before pointcut-ref="allPointCut" method="printLogging" />
		</aop:aspect> -->
	</aop:config>
	
	<!-- <bean id="userService" class="com.springbook.biz.user.impl.UserServiceImpl">
		<property name="userDAO" ref="userDAO"></property>
	</bean>
	
	<bean id="userDAO" class="com.springbook.biz.user.impl.UserDAO"></bean> -->
	
	<!-- <bean class="com.springbook.biz.AppleSpeaker"></bean> -->

	<!-- <bean id="tv" class="com.springbook.biz.SamsungTV" p:speaker-ref="sony" p:price="2700000"/>
	
	<bean id="sony" class="com.springbook.biz.SonySpeaker"></bean>
	<bean id="apple" class="com.springbook.biz.AppleSpeaker"></bean>
	
	<bean id="collectionBean" class="com.springbook.biz.CollectionBean">
		<property name="addressList">
			<props>
				<prop key="고길동">서울시 강남구 역삼동</prop>
				<prop key="마이콜">서울시 강남구 성수동</prop>
			</props>
		</property>
	</bean> -->
</beans>
